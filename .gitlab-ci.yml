stages:
  - sync

# Combined Sync from GitHub to GitLab, then GitLab to GitHub
sync_from_and_to_github:
  stage: sync
  only:
    - main
  script:
    - apt-get update && apt-get install -y git
    - git config --global user.email "abenavid@redhat.com"
    - git config --global user.name "Alex Benavides"
    
    # Sync from GitHub to GitLab
    - echo "Syncing from GitHub to GitLab..."
    - git remote -v
    - git remote get-url gitlab || git remote add gitlab https://gitlab-ci-token:$GITLAB_PAT@gitlab.consulting.redhat.com/internal-ansible-library/ansible-library.git
    - echo "Checking GitLab authentication..."
    
    # Retry logic for git fetch from GitLab
    - |
      attempt=0
      max_attempts=5
      until git fetch --all || [ $attempt -eq $max_attempts ]; do
        echo "Attempt $((attempt+1)) failed, retrying..."
        attempt=$((attempt+1))
        sleep 5
      done
      if [ $attempt -eq $max_attempts ]; then
        echo "Authentication failed with GitLab after $max_attempts attempts. Check token."
        exit 1
      fi
      
    - git checkout -B main github/main
    - git merge --allow-unrelated-histories origin/main || echo "No conflicts detected."
    - git remote get-url github || git remote add github https://github.com/redhat-cop/ansible-library.git
    - git fetch --all
    - git checkout -B main github/main || git checkout -B main origin/main
    - git merge --allow-unrelated-histories origin/main || echo "No conflicts detected."
    - echo "Resolving conflicts (if any)..."
    - git diff --name-only --diff-filter=U  # Lists files with unresolved conflicts
    - echo "Please manually resolve any merge conflicts, commit the result, and then push."
    - git add .  # Add resolved files
    - git commit -m "Resolved merge conflicts" || echo "No changes to commit."
    - echo "Checking if push is needed..."
    - git status
    - git push --force gitlab main || echo "✅ No changes to push."
    - git remote -v
    
    # Sync from GitLab to GitHub
    - echo "Syncing from GitLab to GitHub..."
    - rm -rf tmp_repo
    - git clone https://$GITHUB_PAT@github.com/redhat-cop/ansible-library.git tmp_repo
    - cd tmp_repo
    - git remote add gitlab https://abenavid:$GITLAB_PAT@gitlab.consulting.redhat.com/internal-ansible-library/ansible-library.git
    - git fetch --all
    - git remote -v
    - git checkout main || git checkout -B main origin/main
    - git fetch gitlab main || echo "GitLab main branch not found."
    - git merge --squash gitlab/main || echo "No changes to merge from GitLab."
    - git commit -m "Sync with GitLab main" || echo "No changes to commit."
    - git push --force origin main
  tags:
    - internal
    - pah
  
# stages:
#   - sync_to_github
#   - sync_from_github

# # Sync from GitHub to GitLab (for `main`)
# sync_from_github:
#   stage: sync_from_github
#   only:
#     - main
#   script:
#     - apt-get update && apt-get install -y git
#     - git config --global user.email "abenavid@redhat.com"
#     - git config --global user.name "Alex Benavides"
#     - git remote -v
#     - git remote get-url gitlab || git remote add gitlab https://gitlab-ci-token:$GITLAB_PAT@gitlab.consulting.redhat.com/internal-ansible-library/ansible-library.git
#     - echo "Checking GitLab authentication..."
    
#     # Retry logic for git fetch
#     - |
#       attempt=0
#       max_attempts=5
#       until git fetch --all || [ $attempt -eq $max_attempts ]; do
#         echo "Attempt $((attempt+1)) failed, retrying..."
#         attempt=$((attempt+1))
#         sleep 5
#       done
#       if [ $attempt -eq $max_attempts ]; then
#         echo "Authentication failed with GitLab after $max_attempts attempts. Check token."
#         exit 1
#       fi
      
#     - git checkout -B main github/main
#     - git merge --allow-unrelated-histories origin/main || echo "No conflicts detected."
#     - git remote get-url github || git remote add github https://github.com/redhat-cop/ansible-library.git
#     - git fetch --all
#     - git checkout -B main github/main || git checkout -B main origin/main
#     - git merge --allow-unrelated-histories origin/main || echo "No conflicts detected."
#     - echo "Resolving conflicts (if any)..."
#     - git diff --name-only --diff-filter=U  # Lists files with unresolved conflicts
#     - echo "Please manually resolve any merge conflicts, commit the result, and then push."
#     - git add .  # Add resolved files
#     - git commit -m "Resolved merge conflicts" || echo "No changes to commit."
#     - echo "Checking if push is needed..."
#     - git status
#     - git push --force gitlab main || echo "✅ No changes to push."
#     - git remote -v
#   tags:
#     - internal
#     - pah


# # Sync from GitLab `main` to GitHub (Keeps GitHub Updated)
# sync_to_github:
#   stage: sync_to_github
#   only:
#     - main
#   script:
#     - apt-get update && apt-get install -y git
#     - git config --global user.email "abenavid@redhat.com"
#     - git config --global user.name "Alex Benavides"
#     - rm -rf tmp_repo
#     - git clone https://$GITHUB_PAT@github.com/redhat-cop/ansible-library.git tmp_repo
#     - cd tmp_repo
#     - git remote add gitlab https://abenavid:$GITLAB_PAT@gitlab.consulting.redhat.com/internal-ansible-library/ansible-library.git
#     - git fetch --all
#     - git remote -v
#     - git checkout main || git checkout -B main origin/main
#     - git fetch gitlab main || echo "GitLab main branch not found."
#     - git merge --squash gitlab/main || echo "No changes to merge from GitLab."
#     - git commit -m "Sync with GitLab main" || echo "No changes to commit."
#     - git push --force origin main
#   tags:
#     - internal
#     - pah


# # Merge Staging to Main (Auto-merge)
# merge_staging_to_main:
#   stage: merge
#   only:
#     - main
#   script:
#     - apt-get update && apt-get install -y git
#     - git config --global user.email "abenavid@redhat.com"
#     - git config --global user.name "Alex Benavides"
#     - rm -rf tmp_repo
#     - git clone https://$GITHUB_PAT@github.com/redhat-cop/ansible-library.git tmp_repo
#     - cd tmp_repo
#     - git remote add gitlab https://abenavid:$GITLAB_PAT@gitlab.consulting.redhat.com/internal-ansible-library/ansible-library.git
#     - git fetch --all
#     - git remote -v
#     - git checkout main

#     # Pull the latest changes from the remote main before merging
#     - echo "Pulling latest changes from GitLab main..."
#     - git pull gitlab main || echo "Failed to pull latest changes from GitLab."

#     # Merge staging into main
#     - echo "Merging staging into main..."
#     - git merge --no-edit origin/staging || echo "No conflicts detected."

#     # Set up GitHub remote URL if not already present
#     - git remote get-url github || git remote add github https://github.com/redhat-cop/ansible-library.git
#     - echo "Checking GitLab authentication..."
#     - git remote set-url gitlab https://gitlab-ci-token:$GITLAB_PAT@gitlab.consulting.redhat.com/internal-ansible-library/ansible-library.git
#     - echo "Pushing merged changes to main..."
#     - git push gitlab main
#   tags:
#     - internal
#     - pah
