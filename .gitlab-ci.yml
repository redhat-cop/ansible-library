stages:
  - sync
  - merge

# Sync from GitHub to GitLab (for `main`)
sync_from_github:
  stage: sync
  only:
    - main
  script:
    - apt-get update && apt-get install -y git
    - git config --global user.email "abenavid@redhat.com"
    - git config --global user.name "Alex Benavides"
    - git remote -v
    
    # Add GitLab remote with token (move this before git fetch to ensure it's authenticated)
    - git remote get-url gitlab || git remote add gitlab https://gitlab-ci-token:$GITLAB_PAT@gitlab.consulting.redhat.com/internal-ansible-library/ansible-library.git
    
    # Fetch all remotes after setting up the GitLab remote
    - git fetch --all
    
    # Fetch from GitHub
    - git checkout -B main github/main
    - git merge --allow-unrelated-histories origin/main || echo "No conflicts detected."

    # Check if the GitHub remote already exists, and add it if not
    - git remote get-url github || git remote add github https://github.com/redhat-cop/ansible-library.git
    
    # Fetch from GitHub again after ensuring the GitHub remote is configured
    - git fetch --all
    - git checkout -B main github/main || git checkout -B main origin/main
    - git merge --allow-unrelated-histories origin/main || echo "No conflicts detected."
    
    # Resolve merge conflicts
    - echo "Resolving conflicts (if any)..."
    - git diff --name-only --diff-filter=U  # Lists files with unresolved conflicts
    - echo "Please manually resolve any merge conflicts, commit the result, and then push."
    - git add .  # Add resolved files
    - git commit -m "Resolved merge conflicts" || echo "No changes to commit."

    # Only push if there were changes to commit
    - echo "Checking if push is needed..."
    - git status
    - git push --force gitlab main || echo "‚úÖ No changes to push."
    
    # Verify the remotes
    - git remote -v
  tags:
    - internal
    - pah



# Sync from GitLab `main` to GitHub (Keeps GitHub Updated)
sync_to_github:
  stage: sync
  only:
    - main
  script:
    - apt-get update && apt-get install -y git
    - git config --global user.email "abenavid@redhat.com"
    - git config --global user.name "Alex Benavides"
    - rm -rf tmp_repo
    - git clone https://$GITHUB_PAT@github.com/redhat-cop/ansible-library.git tmp_repo
    - cd tmp_repo
    - git remote add gitlab https://abenavid:$GITLAB_PAT@gitlab.consulting.redhat.com/internal-ansible-library/ansible-library.git
    - git fetch --all
    - git remote -v
    - git checkout main || git checkout -B main origin/main
    - git fetch gitlab main || echo "GitLab main branch not found."
    - git branch -r | grep "gitlab/main" && git merge --allow-unrelated-histories gitlab/main || echo "GitLab main branch does not exist, skipping merge."
    - git checkout gitlab/main -- .gitlab-ci.yml || echo ".gitlab-ci.yml not found, skipping restore."
    - git add .gitlab-ci.yml
    - git commit -m "Preserve .gitlab-ci.yml after merge" || echo "No changes to commit."
    - git gc --prune=now
    - git repack -a -d --depth=250 --window=250
    - git push --force --thin origin main
  tags:
    - internal
    - pah

# Sync Personal Branches to Staging
sync_to_staging:
  stage: sync
  only:
    - /^.*$/  # Runs on any branch except protected ones
  except:
    - main
    - staging
  script:
    - apt-get update && apt-get install -y git
    - git config --global user.email "abenavid@redhat.com"
    - git config --global user.name "Alex Benavides"
    - git remote -v
    - git fetch --all
    - git checkout -B staging origin/staging || git checkout -B staging
    - echo "üîÑ Merging current branch ($CI_COMMIT_REF_NAME) into staging..."
    - git merge --no-edit origin/$CI_COMMIT_REF_NAME || echo "No conflicts detected."

    # Ensure we push if merge was successful, even if fast-forwarded
    - echo "üîç Checking if push is needed..."
    - git push --force gitlab staging || echo "‚úÖ Staging already up to date."
  tags:
    - internal
    - pah

# Merge Staging to Main (Auto-merge)
merge_staging_to_main:
  stage: merge
  only:
    - main
  script:
    - apt-get update && apt-get install -y git
    - git config --global user.email "abenavid@redhat.com"
    - git config --global user.name "Alex Benavides"
    - git remote -v
    - git fetch --all
    - git checkout main
    - echo "Merging staging into main..."
    - git merge --no-edit origin/staging || echo "No conflicts detected."

    # Check if the github remote already exists, and add it if not
    - git remote get-url github || git remote add github https://github.com/redhat-cop/ansible-library.git

    # Set GitLab remote URL using the $GITLAB_PAT token
    - echo "Checking GitLab authentication..."
    - git remote set-url gitlab https://gitlab-ci-token:$GITLAB_PAT@gitlab.consulting.redhat.com/internal-ansible-library/ansible-library.git
    - echo "Pushing merged changes to main..."
    - git push gitlab main
  tags:
    - internal
    - pah

